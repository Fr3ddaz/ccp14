/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.kth.badgers.lexparse.node;

import se.kth.badgers.lexparse.analysis.*;

@SuppressWarnings("nls")
public final class AAdditiveExprRest extends PAdditiveExprRest
{
    private PMinusExpr _minusExpr_;

    public AAdditiveExprRest()
    {
        // Constructor
    }

    public AAdditiveExprRest(
        @SuppressWarnings("hiding") PMinusExpr _minusExpr_)
    {
        // Constructor
        setMinusExpr(_minusExpr_);

    }

    @Override
    public Object clone()
    {
        return new AAdditiveExprRest(
            cloneNode(this._minusExpr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAdditiveExprRest(this);
    }

    public PMinusExpr getMinusExpr()
    {
        return this._minusExpr_;
    }

    public void setMinusExpr(PMinusExpr node)
    {
        if(this._minusExpr_ != null)
        {
            this._minusExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._minusExpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._minusExpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._minusExpr_ == child)
        {
            this._minusExpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._minusExpr_ == oldChild)
        {
            setMinusExpr((PMinusExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
