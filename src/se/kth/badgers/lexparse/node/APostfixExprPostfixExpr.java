/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.kth.badgers.lexparse.node;

import java.util.*;
import se.kth.badgers.lexparse.analysis.*;

@SuppressWarnings("nls")
public final class APostfixExprPostfixExpr extends PPostfixExpr
{
    private PPrimaryExpr _primaryExpr_;
    private final LinkedList<PPostfixExprRest> _postfixExprRest_ = new LinkedList<PPostfixExprRest>();

    public APostfixExprPostfixExpr()
    {
        // Constructor
    }

    public APostfixExprPostfixExpr(
        @SuppressWarnings("hiding") PPrimaryExpr _primaryExpr_,
        @SuppressWarnings("hiding") List<?> _postfixExprRest_)
    {
        // Constructor
        setPrimaryExpr(_primaryExpr_);

        setPostfixExprRest(_postfixExprRest_);

    }

    @Override
    public Object clone()
    {
        return new APostfixExprPostfixExpr(
            cloneNode(this._primaryExpr_),
            cloneList(this._postfixExprRest_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPostfixExprPostfixExpr(this);
    }

    public PPrimaryExpr getPrimaryExpr()
    {
        return this._primaryExpr_;
    }

    public void setPrimaryExpr(PPrimaryExpr node)
    {
        if(this._primaryExpr_ != null)
        {
            this._primaryExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._primaryExpr_ = node;
    }

    public LinkedList<PPostfixExprRest> getPostfixExprRest()
    {
        return this._postfixExprRest_;
    }

    public void setPostfixExprRest(List<?> list)
    {
        for(PPostfixExprRest e : this._postfixExprRest_)
        {
            e.parent(null);
        }
        this._postfixExprRest_.clear();

        for(Object obj_e : list)
        {
            PPostfixExprRest e = (PPostfixExprRest) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._postfixExprRest_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._primaryExpr_)
            + toString(this._postfixExprRest_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._primaryExpr_ == child)
        {
            this._primaryExpr_ = null;
            return;
        }

        if(this._postfixExprRest_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._primaryExpr_ == oldChild)
        {
            setPrimaryExpr((PPrimaryExpr) newChild);
            return;
        }

        for(ListIterator<PPostfixExprRest> i = this._postfixExprRest_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PPostfixExprRest) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
